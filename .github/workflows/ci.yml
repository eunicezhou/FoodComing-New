name: FoodComing CICD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Set python path
      run: |
        echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV
        echo "$PYTHONPATH"

    - name: Prepare env variables
      env:
        ENV_TEST_BASE64: ${{ secrets.ENV_TEST }}
        ENV_LOCAL_BASE64: ${{ secrets.ENV_LOCAL }}
      run: |
        echo "$ENV_TEST_BASE64" | base64 --decode > .env.test
        echo "$ENV_LOCAL_BASE64" | base64 --decode > .env.local
        
    - name: upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: env-files
        path: |
          .env.test
          .env.local

  test:
    runs-on: ubuntu-latest
    needs: build 

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: ${{ secrets.SQLALCHEMY_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Download env file
      uses: actions/download-artifact@v4
      with:
        name: env-files

    - name: Load env variables from .env.test
      run: |
        set -o allexport
        source .env.test
        set +o allexport

    - name: Run tests
      env:
        ENVIRONMENT: test
        FLASK_APP: foodcoming.py
      run: |
        export ENVIRONMENT="$ENVIRONMENT"
        flask test